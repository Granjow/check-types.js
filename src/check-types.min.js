!function(globals){"use strict";function equal(lhs,rhs){return lhs===rhs}function isUndefined(data){return void 0===data}function isNull(data){return null===data}function assigned(data){return!isUndefined(data)&&!isNull(data)}function zero(data){return 0===data}function infinity(data){return data===Number.POSITIVE_INFINITY||data===Number.NEGATIVE_INFINITY}function number(data){return"number"==typeof data&&isNaN(data)===!1&&data!==Number.POSITIVE_INFINITY&&data!==Number.NEGATIVE_INFINITY}function integer(data){return number(data)&&data%1===0}function even(data){return number(data)&&data%2===0}function odd(data){return integer(data)&&!even(data)}function greater(lhs,rhs){return number(lhs)&&lhs>rhs}function less(lhs,rhs){return number(lhs)&&lhs<rhs}function between(data,x,y){return x<y?greater(data,x)&&less(data,y):less(data,x)&&greater(data,y)}function greaterOrEqual(lhs,rhs){return number(lhs)&&lhs>=rhs}function lessOrEqual(lhs,rhs){return number(lhs)&&lhs<=rhs}function inRange(data,x,y){return x<y?greaterOrEqual(data,x)&&lessOrEqual(data,y):lessOrEqual(data,x)&&greaterOrEqual(data,y)}function positive(data){return greater(data,0)}function negative(data){return less(data,0)}function string(data){return"string"==typeof data}function emptyString(data){return""===data}function nonEmptyString(data){return string(data)&&""!==data}function contains(data,substring){return string(data)&&data.indexOf(substring)!==-1}function match(data,regex){return string(data)&&!!data.match(regex)}function boolean(data){return data===!1||data===!0}function object(data){return"[object Object]"===Object.prototype.toString.call(data)}function emptyObject(data){return object(data)&&0===Object.keys(data).length}function nonEmptyObject(data){return object(data)&&Object.keys(data).length>0}function instanceStrict(data,prototype){try{return data instanceof prototype}catch(error){return!1}}function instance(data,prototype){try{return instanceStrict(data,prototype)||data.constructor.name===prototype.name||Object.prototype.toString.call(data)==="[object "+prototype.name+"]"}catch(error){return!1}}function like(data,archetype){var name;for(name in archetype)if(archetype.hasOwnProperty(name)){if(data.hasOwnProperty(name)===!1||typeof data[name]!=typeof archetype[name])return!1;if(object(data[name])&&like(data[name],archetype[name])===!1)return!1}return!0}function array(data){return Array.isArray(data)}function emptyArray(data){return array(data)&&0===data.length}function nonEmptyArray(data){return array(data)&&data.length>0}function arrayLike(data){return assigned(data)&&number(data.length)}function iterable(data){return"undefined"==typeof Symbol?arrayLike(data):assigned(data)&&isFunction(data[Symbol.iterator])}function includes(data,value){var iterator,iteration;if(not.assigned(data))return!1;try{if("undefined"!=typeof Symbol&&data[Symbol.iterator]&&isFunction(data.values)){iterator=data.values();do if(iteration=iterator.next(),iteration.value===value)return!0;while(!iteration.done);return!1}Object.keys(data).forEach(function(key){if(data[key]===value)throw 0})}catch(ignore){return!0}return!1}function hasLength(data,length){return assigned(data)&&data.length===length}function date(data){try{return instance(data,Date)&&integer(data.getTime())}catch(error){return!1}}function isFunction(data){return"function"==typeof data}function apply(data,predicates){return assert.array(data),isFunction(predicates)?data.map(function(value){return predicates(value)}):(assert.array(predicates),assert.hasLength(data,predicates.length),data.map(function(value,index){return predicates[index](value)}))}function map(data,predicates){return assert.object(data),isFunction(predicates)?mapSimple(data,predicates):(assert.object(predicates),mapComplex(data,predicates))}function mapSimple(data,predicate){var result={};return Object.keys(data).forEach(function(key){result[key]=predicate(data[key])}),result}function mapComplex(data,predicates){var result={};return Object.keys(predicates).forEach(function(key){var predicate=predicates[key];isFunction(predicate)?not.assigned(data)?result[key]=!!predicate._isMaybefied:result[key]=predicate(data[key]):object(predicate)&&(result[key]=mapComplex(data[key],predicate))}),result}function all(data){return array(data)?testArray(data,!1):(assert.object(data),testObject(data,!1))}function testArray(data,result){var i;for(i=0;i<data.length;i+=1)if(data[i]===result)return result;return!result}function testObject(data,result){var key,value;for(key in data)if(data.hasOwnProperty(key)){if(value=data[key],object(value)&&testObject(value,result)===result)return result;if(value===result)return result}return!result}function any(data){return array(data)?testArray(data,!0):(assert.object(data),testObject(data,!0))}function mixin(target,source){return Object.keys(source).forEach(function(key){target[key]=source[key]}),target}function assertModifier(predicate,defaultMessage){return function(){assertPredicate(predicate,arguments,defaultMessage)}}function assertPredicate(predicate,args,defaultMessage){var argCount=predicate.length,message=args[argCount],ErrorType=args[argCount+1];assertImpl(predicate.apply(null,args),nonEmptyString(message)?message:defaultMessage,isFunction(ErrorType)?ErrorType:TypeError)}function assertImpl(value,message,ErrorType){if(value===!1)throw new ErrorType(message||"Assertion failed")}function notModifier(predicate){return function(){return notImpl(predicate.apply(null,arguments))}}function notImpl(value){return!value}function maybeModifier(predicate){var modifiedPredicate=function(){return!!not.assigned(arguments[0])||predicate.apply(null,arguments)};return modifiedPredicate._isMaybefied=!0,modifiedPredicate}function maybeImpl(value){return assigned(value)===!1||value}function ofModifier(target,type,predicate){return function(){var collection,args;if(collection=arguments[0],"maybe"===target&&not.assigned(collection))return!0;if(!type(collection))return!1;collection=coerceCollection(type,collection),args=slice.call(arguments,1);try{collection.forEach(function(item){if(("maybe"!==target||assigned(item))&&!predicate.apply(null,[item].concat(args)))throw 0})}catch(ignore){return!1}return!0}}function coerceCollection(type,collection){switch(type){case arrayLike:return slice.call(collection);case object:return Object.keys(collection).map(function(key){return collection[key]});default:return collection}}function createModifiedPredicates(modifier,object){return createModifiedFunctions([modifier,predicates,object])}function createModifiedFunctions(args){var modifier,object,functions,result;return modifier=args.shift(),object=args.pop(),functions=args.pop(),result=object||{},Object.keys(functions).forEach(function(key){Object.defineProperty(result,key,{configurable:!1,enumerable:!0,writable:!1,value:modifier.apply(null,args.concat(functions[key],messages[key]))})}),result}function createModifiedModifier(modifier,modified){return createModifiedFunctions([modifier,modified,null])}function createOfPredicates(key){predicates[key].of=createModifiedFunctions([ofModifier.bind(null,null),predicates[key],predicates,null])}function createOfModifiers(base,modifier){collections.forEach(function(key){base[key].of=createModifiedModifier(modifier,predicates[key].of)})}function createMaybeOfModifiers(key){maybe[key].of=createModifiedFunctions([ofModifier.bind(null,"maybe"),predicates[key],predicates,null]),assert.maybe[key].of=createModifiedModifier(assertModifier,maybe[key].of),assert.not[key].of=createModifiedModifier(assertModifier,not[key].of)}function exportFunctions(functions){"function"==typeof define&&define.amd?define(function(){return functions}):"undefined"!=typeof module&&null!==module&&module.exports?module.exports=functions:globals.check=functions}var strings,messages,predicates,functions,assert,not,maybe,collections,slice;strings={v:"value",n:"number",s:"string",b:"boolean",o:"object",t:"type",a:"array",al:"array-like",i:"iterable",d:"date",f:"function",l:"length"},messages={},predicates={},[{f:equal,s:"v"},{n:"undefined",f:isUndefined,s:"v"},{n:"null",f:isNull,s:"v"},{f:assigned,s:"v"},{f:includes,s:"v"},{f:zero},{f:infinity},{f:number},{f:integer},{f:even},{f:odd},{f:greater},{f:less},{f:between},{f:greaterOrEqual},{f:lessOrEqual},{f:inRange},{f:positive},{f:negative},{f:string,s:"s"},{f:emptyString,s:"s"},{f:nonEmptyString,s:"s"},{f:contains,s:"s"},{f:match,s:"s"},{f:boolean,s:"b"},{f:object,s:"o"},{f:emptyObject,s:"o"},{f:nonEmptyObject,s:"o"},{f:instanceStrict,s:"t"},{f:instance,s:"t"},{f:like,s:"t"},{f:array,s:"a"},{f:emptyArray,s:"a"},{f:nonEmptyArray,s:"a"},{f:arrayLike,s:"al"},{f:iterable,s:"i"},{f:date,s:"d"},{n:"function",f:isFunction,s:"f"},{f:hasLength,s:"l"}].map(function(data){var n=data.n||data.f.name;messages[n]="Invalid "+strings[data.s||"n"],predicates[n]=data.f}),functions={apply:apply,map:map,all:all,any:any},collections=["array","arrayLike","iterable","object"],slice=Array.prototype.slice,functions=mixin(functions,predicates),assert=createModifiedPredicates(assertModifier,assertImpl),not=createModifiedPredicates(notModifier,notImpl),maybe=createModifiedPredicates(maybeModifier,maybeImpl),assert.not=createModifiedModifier(assertModifier,not),assert.maybe=createModifiedModifier(assertModifier,maybe),collections.forEach(createOfPredicates),createOfModifiers(assert,assertModifier),createOfModifiers(not,notModifier),collections.forEach(createMaybeOfModifiers),exportFunctions(mixin(functions,{assert:assert,not:not,maybe:maybe}))}(this);